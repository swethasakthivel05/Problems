class Solution {
    public List<List<Integer>> findWinners(int[][] matches) {
        List<List<Integer>> ans=new ArrayList<>();

        Set <Integer> allplayers = new HashSet<>();
        Set <Integer> losers = new HashSet<>();

        Map <Integer,Integer> map=new HashMap<>();

        Set <Integer> nonlosers = new HashSet<>();
        Set <Integer> lostonematch = new HashSet<>();

        for(int match[] : matches){
            allplayers.add(match[0]);
            allplayers.add(match[1]);
            losers.add(match[1]);

            int lostcount = map.getOrDefault(match[1],0);
            map.put(match[1],lostcount+1);
        }

        for(int players : allplayers){
            if(!losers.contains(players)){
                nonlosers.add(players);
            }
        }

        for(Map.Entry<Integer,Integer> entry : map.entrySet()){
            if(entry.getValue()==1){
                lostonematch.add(entry.getKey());
            }
        }

        List <Integer> nonloserslist = new ArrayList<>(nonlosers);
        Collections.sort(nonloserslist);

        ans.add(new ArrayList<>(nonloserslist));

        List <Integer> lostonematchlist = new ArrayList<>(lostonematch);
        Collections.sort(lostonematchlist);

        ans.add(lostonematchlist);

        return ans;
    }
}